{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/smartdna/app/assessment-tool/page.tsx"],"sourcesContent":["// app/assessment-tool/page.tsx - Next.js version\n'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\n\ninterface FormData {\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n}\n\nexport default function AssessmentTool() {\n  // Backend URL - Update this if needed\n  const API_URL = 'https://smart-deep-neural-assessment-dna.onrender.com';\n  \n  const router = useRouter();\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    company: '',\n    email: '',\n    phone: ''\n  });\n  \n  const [selectedLanguage, setSelectedLanguage] = useState('en-IN');\n  const [selectedMode, setSelectedMode] = useState<'voice' | 'text'>('voice');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [textInput, setTextInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [assessmentResult, setAssessmentResult] = useState<any>(null);\n  \n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const languages = [\n    { code: 'en-IN', name: 'English' },\n    { code: 'hi-IN', name: 'हिंदी' },\n    { code: 'ta-IN', name: 'தமிழ்' },\n    { code: 'te-IN', name: 'తెలుగు' },\n    { code: 'bn-IN', name: 'বাংলা' },\n    { code: 'gu-IN', name: 'ગુજરાતી' },\n    { code: 'kn-IN', name: 'ಕನ್ನಡ' },\n    { code: 'ml-IN', name: 'മലയാളം' },\n    { code: 'mr-IN', name: 'मराठी' },\n    { code: 'pa-IN', name: 'ਪੰਜਾਬੀ' }\n  ];\n\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const startRecording = async () => {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    audioChunksRef.current = []; // Clear previous recordings\n\n    // CRITICAL: Set up data collection BEFORE starting\n    mediaRecorder.ondataavailable = (event) => {\n      console.log('Data chunk received, size:', event.data.size);\n      if (event.data.size > 0) {\n        audioChunksRef.current.push(event.data);\n      }\n    };\n\n    mediaRecorder.onstop = () => {\n      console.log('Recording stopped. Total chunks:', audioChunksRef.current.length);\n    };\n\n    // Start recording with timeslice to ensure data is collected\n    mediaRecorder.start(1000); // Collect data every 1 second\n    setIsRecording(true);\n    setRecordingTime(0);\n\n    timerRef.current = setInterval(() => {\n      setRecordingTime((prev) => {\n        if (prev >= 59) {\n          stopRecording();\n          return 60;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n  } catch (error) {\n    console.error('Error accessing microphone:', error);\n    setError('Microphone access denied. Please allow microphone access and try again.');\n  }\n};\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n      \n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.name || !formData.company || !formData.email || !formData.phone) {\n      setError('Please fill all fields');\n      return;\n    }\n\n    const formDataToSend = new FormData();\n    formDataToSend.append('name', formData.name);\n    formDataToSend.append('company', formData.company);\n    formDataToSend.append('email', formData.email);\n    formDataToSend.append('phone', formData.phone);\n    formDataToSend.append('language', selectedLanguage);\n    formDataToSend.append('mode', selectedMode);\n\n    if (selectedMode === 'voice') {\n      if (audioChunksRef.current.length === 0) {\n        setError('Please record your voice first');\n        return;\n      }\n      const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\n      formDataToSend.append('audio', audioBlob, 'recording.webm');\n    } else {\n      if (!textInput.trim()) {\n        setError('Please enter your business description');\n        return;\n      }\n      formDataToSend.append('textInput', textInput);\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch(`${API_URL}/api/assess`, {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setAssessmentResult(result);\n      } else {\n        setError(result.error || 'Assessment failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Network error. Please check your connection and try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  if (assessmentResult) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-600 to-purple-800 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-2xl shadow-xl max-w-4xl w-full p-8\">\n          <h1 className=\"text-3xl font-bold text-center mb-6\">Your Assessment Report</h1>\n          <div className=\"prose max-w-none\">\n            <div dangerouslySetInnerHTML={{ __html: assessmentResult.report.replace(/\\n/g, '<br />') }} />\n          </div>\n          <div className=\"mt-8 text-center\">\n            <button\n              onClick={() => router.push('/')}\n              className=\"bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition\"\n            >\n              Back to Home\n            </button>\n          </div>\n          <p className=\"text-center text-gray-500 mt-4 text-sm\">\n            Powered by StartHub AI Technology\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-600 to-purple-800 flex items-center justify-center\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-12 text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-purple-600 mx-auto mb-4\"></div>\n          <h2 className=\"text-2xl font-semibold mb-2\">Processing your assessment...</h2>\n          <p className=\"text-gray-600\">Our AI is analyzing your response</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-600 to-purple-800 py-8 px-4\">\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8\">\n          <h1 className=\"text-3xl font-bold text-center mb-2\">StartHub AI Assessment</h1>\n          <p className=\"text-center text-gray-600 mb-8\">Deep Neural Assessment Platform</p>\n\n          {error && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {error}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Your Name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Company Name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"company\"\n                  value={formData.company}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Phone\n                </label>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Select Your Language\n                </label>\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n                  {languages.map((lang) => (\n                    <button\n                      key={lang.code}\n                      type=\"button\"\n                      onClick={() => setSelectedLanguage(lang.code)}\n                      className={`px-3 py-2 text-sm rounded-lg border-2 transition ${\n                        selectedLanguage === lang.code\n                          ? 'border-purple-600 bg-purple-600 text-white'\n                          : 'border-gray-300 hover:border-purple-600'\n                      }`}\n                    >\n                      {lang.name}\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Choose Assessment Mode\n                </label>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setSelectedMode('voice')}\n                    className={`p-4 rounded-lg border-2 transition ${\n                      selectedMode === 'voice'\n                        ? 'border-purple-600 bg-purple-50'\n                        : 'border-gray-300 hover:border-purple-600'\n                    }`}\n                  >\n                    <div className=\"text-3xl mb-2\">🎤</div>\n                    <div className=\"font-semibold\">Voice Assessment</div>\n                    <div className=\"text-sm text-gray-600\">Speak in your language</div>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setSelectedMode('text')}\n                    className={`p-4 rounded-lg border-2 transition ${\n                      selectedMode === 'text'\n                        ? 'border-purple-600 bg-purple-50'\n                        : 'border-gray-300 hover:border-purple-600'\n                    }`}\n                  >\n                    <div className=\"text-3xl mb-2\">✍️</div>\n                    <div className=\"font-semibold\">Text Assessment</div>\n                    <div className=\"text-sm text-gray-600\">Type in any language</div>\n                  </button>\n                </div>\n              </div>\n<button\n  type=\"button\"\n  onClick={() => console.log('Audio chunks:', audioChunksRef.current.length)}\n  className=\"mt-2 text-sm text-gray-600 underline\"\n>\n  Debug: Check Audio Chunks\n</button>\n              {selectedMode === 'voice' ? (\n                <div className=\"bg-purple-50 rounded-lg p-6 text-center\">\n                  <h3 className=\"font-semibold mb-2\">Voice Recording</h3>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    Click the button and speak about your business for up to 60 seconds\n                  </p>\n                  <button\n                    type=\"button\"\n                    onClick={isRecording ? stopRecording : startRecording}\n                    className={`w-24 h-24 rounded-full text-white text-4xl transition ${\n                      isRecording\n                        ? 'bg-green-500 hover:bg-green-600 animate-pulse'\n                        : 'bg-red-500 hover:bg-red-600'\n                    }`}\n                  >\n                    {isRecording ? '⏹️' : '🎤'}\n                  </button>\n                  <div className=\"text-3xl font-bold text-purple-600 mt-4\">\n                    {formatTime(recordingTime)}\n                  </div>\n                  <p className=\"text-sm text-gray-600 mt-2\">\n                    {isRecording ? 'Recording... Click to stop' : \n                     recordingTime > 0 ? 'Recording complete. Click to record again' : \n                     'Click to start recording'}\n                  </p>\n                </div>\n              ) : (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tell us about your business\n                  </label>\n                  <textarea\n                    value={textInput}\n                    onChange={(e) => setTextInput(e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                    rows={6}\n                    placeholder=\"Describe your business, challenges, and goals in your preferred language...\"\n                  />\n                </div>\n              )}\n\n              <button\n                type=\"submit\"\n                className=\"w-full bg-gradient-to-r from-purple-600 to-purple-800 text-white py-3 rounded-lg font-semibold hover:shadow-lg transition transform hover:-translate-y-0.5\"\n              >\n                Start Assessment\n              </button>\n            </div>\n          </form>\n\n          <p className=\"text-center text-gray-500 mt-6 text-sm\">\n            Powered by StartHub AI Technology\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/smartdna/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}